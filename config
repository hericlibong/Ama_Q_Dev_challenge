versions pytest-8.3.5, python-3.12.3.final.0
invocation_dir=/home/hericdev/CHALLENGES
cwd=/home/hericdev/CHALLENGES
args=()

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x79f255297860>
    pytest_plugin_registered [hook]
        plugin: <Session  exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        plugin_name: session
        manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x79f255297860>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x79f2550499d0>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x79f255048710>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
    find_module called for: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
    find_module called for: pdb [assertion]
    find_module called for: cmd [assertion]
    find_module called for: code [assertion]
    find_module called for: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
          plugin_name: 134081726367360
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x79f255297860>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_cov.plugin' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/pytest_cov/plugin.py'>
          plugin_name: pytest_cov
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <pytest_cov.plugin.CovPlugin object at 0x79f2546e7020>
          plugin_name: _cov
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x79f2550499d0>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x79f255048710>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x79f25505f140>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x79f2545bd100>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
          plugin_name: 134081726367360
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x79f255297860>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_cov.plugin' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/pytest_cov/plugin.py'>
          plugin_name: pytest_cov
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <pytest_cov.plugin.CovPlugin object at 0x79f2546e7020>
          plugin_name: _cov
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x79f2550499d0>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x79f255048710>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x79f25505f140>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x79f2545bd100>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x79f254613200>
          plugin_name: funcmanage
          manager: <_pytest.config.PytestPluginManager object at 0x79f255abc680>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x79f255297860>
          start_path: /home/hericdev/CHALLENGES
          startdir: /home/hericdev/CHALLENGES
      find_module called for: email.parser [assertion]
      find_module called for: email.feedparser [assertion]
      finish pytest_report_header --> [['rootdir: /home/hericdev/CHALLENGES', 'configfile: pyproject.toml', 'testpaths: sassy_ai/tests', 'plugins: cov-6.1.1'], 'cachedir: .pytest_cache', ['using: pytest-8.3.5', 'registered third-party plugins:', '  pytest-cov-6.1.1 at /home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/pytest_cov/plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['sassy_ai/tests'] [collection]
        pytest_collectstart [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument CollectionArgument(path=PosixPath('/home/hericdev/CHALLENGES/sassy_ai/tests'), parts=[], module_name=None) [collection]
            pytest_collect_directory [hook]
                path: /home/hericdev/CHALLENGES
                parent: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> <Dir CHALLENGES> [hook]
            pytest_collectstart [hook]
                collector: <Dir CHALLENGES>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir CHALLENGES>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/.git
                  path: /home/hericdev/CHALLENGES/.git
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/.gitignore
                  path: /home/hericdev/CHALLENGES/.gitignore
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir CHALLENGES>
                  file_path: /home/hericdev/CHALLENGES/.gitignore
                  path: /home/hericdev/CHALLENGES/.gitignore
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/.pytest_cache
                  path: /home/hericdev/CHALLENGES/.pytest_cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/config
                  path: /home/hericdev/CHALLENGES/config
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir CHALLENGES>
                  file_path: /home/hericdev/CHALLENGES/config
                  path: /home/hericdev/CHALLENGES/config
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/pyproject.toml
                  path: /home/hericdev/CHALLENGES/pyproject.toml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir CHALLENGES>
                  file_path: /home/hericdev/CHALLENGES/pyproject.toml
                  path: /home/hericdev/CHALLENGES/pyproject.toml
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/requirements.txt
                  path: /home/hericdev/CHALLENGES/requirements.txt
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir CHALLENGES>
                  file_path: /home/hericdev/CHALLENGES/requirements.txt
                  path: /home/hericdev/CHALLENGES/requirements.txt
              finish pytest_collect_file --> [] [hook]
              pytest_collect_directory [hook]
                  path: /home/hericdev/CHALLENGES/sassy_ai
                  parent: <Dir CHALLENGES>
              finish pytest_collect_directory --> <Package sassy_ai> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/venv
                  path: /home/hericdev/CHALLENGES/venv
              finish pytest_ignore_collect --> True [hook]
            finish pytest_make_collect_report --> <CollectReport '.' lenresult=1 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Package sassy_ai>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Package sassy_ai>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/sassy_ai/__init__.py
                  path: /home/hericdev/CHALLENGES/sassy_ai/__init__.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package sassy_ai>
                  file_path: /home/hericdev/CHALLENGES/sassy_ai/__init__.py
                  path: /home/hericdev/CHALLENGES/sassy_ai/__init__.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/sassy_ai/.coverage
                  path: /home/hericdev/CHALLENGES/sassy_ai/.coverage
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package sassy_ai>
                  file_path: /home/hericdev/CHALLENGES/sassy_ai/.coverage
                  path: /home/hericdev/CHALLENGES/sassy_ai/.coverage
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/sassy_ai/__pycache__
                  path: /home/hericdev/CHALLENGES/sassy_ai/__pycache__
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/sassy_ai/amazon_q_log.md
                  path: /home/hericdev/CHALLENGES/sassy_ai/amazon_q_log.md
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package sassy_ai>
                  file_path: /home/hericdev/CHALLENGES/sassy_ai/amazon_q_log.md
                  path: /home/hericdev/CHALLENGES/sassy_ai/amazon_q_log.md
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/sassy_ai/cli.py
                  path: /home/hericdev/CHALLENGES/sassy_ai/cli.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package sassy_ai>
                  file_path: /home/hericdev/CHALLENGES/sassy_ai/cli.py
                  path: /home/hericdev/CHALLENGES/sassy_ai/cli.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/sassy_ai/config
                  path: /home/hericdev/CHALLENGES/sassy_ai/config
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package sassy_ai>
                  file_path: /home/hericdev/CHALLENGES/sassy_ai/config
                  path: /home/hericdev/CHALLENGES/sassy_ai/config
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/sassy_ai/engine.py
                  path: /home/hericdev/CHALLENGES/sassy_ai/engine.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package sassy_ai>
                  file_path: /home/hericdev/CHALLENGES/sassy_ai/engine.py
                  path: /home/hericdev/CHALLENGES/sassy_ai/engine.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/sassy_ai/main_cli.py
                  path: /home/hericdev/CHALLENGES/sassy_ai/main_cli.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package sassy_ai>
                  file_path: /home/hericdev/CHALLENGES/sassy_ai/main_cli.py
                  path: /home/hericdev/CHALLENGES/sassy_ai/main_cli.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79f255297860>
                  collection_path: /home/hericdev/CHALLENGES/sassy_ai/responses.py
                  path: /home/hericdev/CHALLENGES/sassy_ai/responses.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package sassy_ai>
                  file_path: /home/hericdev/CHALLENGES/sassy_ai/responses.py
                  path: /home/hericdev/CHALLENGES/sassy_ai/responses.py
              finish pytest_collect_file --> [] [hook]
              pytest_collect_directory [hook]
                  path: /home/hericdev/CHALLENGES/sassy_ai/tests
                  parent: <Package sassy_ai>
              finish pytest_collect_directory --> <Package tests> [hook]
            finish pytest_make_collect_report --> <CollectReport 'sassy_ai' lenresult=1 outcome='passed'> [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Package tests> [collection]
      pytest_collectstart [hook]
          collector: <Package tests>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package tests>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x79f255297860>
            collection_path: /home/hericdev/CHALLENGES/sassy_ai/tests/__init__.py
            path: /home/hericdev/CHALLENGES/sassy_ai/tests/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package tests>
            file_path: /home/hericdev/CHALLENGES/sassy_ai/tests/__init__.py
            path: /home/hericdev/CHALLENGES/sassy_ai/tests/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x79f255297860>
            collection_path: /home/hericdev/CHALLENGES/sassy_ai/tests/__pycache__
            path: /home/hericdev/CHALLENGES/sassy_ai/tests/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x79f255297860>
            collection_path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_cli.py
            path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_cli.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package tests>
            file_path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_cli.py
            path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_cli.py
          pytest_pycollect_makemodule [hook]
              parent: <Package tests>
              module_path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_cli.py
              path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_cli.py
          finish pytest_pycollect_makemodule --> <Module test_cli.py> [hook]
        finish pytest_collect_file --> [<Module test_cli.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x79f255297860>
            collection_path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_cli_commands.py
            path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_cli_commands.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package tests>
            file_path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_cli_commands.py
            path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_cli_commands.py
          pytest_pycollect_makemodule [hook]
              parent: <Package tests>
              module_path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_cli_commands.py
              path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_cli_commands.py
          finish pytest_pycollect_makemodule --> <Module test_cli_commands.py> [hook]
        finish pytest_collect_file --> [<Module test_cli_commands.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x79f255297860>
            collection_path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_engine.py
            path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_engine.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package tests>
            file_path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_engine.py
            path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_engine.py
          pytest_pycollect_makemodule [hook]
              parent: <Package tests>
              module_path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_engine.py
              path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_engine.py
          finish pytest_pycollect_makemodule --> <Module test_engine.py> [hook]
        finish pytest_collect_file --> [<Module test_engine.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x79f255297860>
            collection_path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_main_cli.py
            path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_main_cli.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package tests>
            file_path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_main_cli.py
            path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_main_cli.py
          pytest_pycollect_makemodule [hook]
              parent: <Package tests>
              module_path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_main_cli.py
              path: /home/hericdev/CHALLENGES/sassy_ai/tests/test_main_cli.py
          finish pytest_pycollect_makemodule --> <Module test_main_cli.py> [hook]
        finish pytest_collect_file --> [<Module test_main_cli.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'sassy_ai/tests' lenresult=4 outcome='passed'> [hook]
    genitems <Module test_cli.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_cli.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_cli.py>
      find_module called for: sassy_ai [assertion]
      find_module called for: sassy_ai.tests [assertion]
      find_module called for: sassy_ai.tests.test_cli [assertion]
      matched test file '/home/hericdev/CHALLENGES/sassy_ai/tests/test_cli.py' [assertion]
      _read_pyc(/home/hericdev/CHALLENGES/sassy_ai/tests/test_cli.py): out of date [assertion]
      rewriting PosixPath('/home/hericdev/CHALLENGES/sassy_ai/tests/test_cli.py') [assertion]
      find_module called for: click [assertion]
      find_module called for: click.core [assertion]
      find_module called for: click.types [assertion]
      find_module called for: click._compat [assertion]
      find_module called for: click.exceptions [assertion]
      find_module called for: click.globals [assertion]
      find_module called for: click.utils [assertion]
      find_module called for: click.formatting [assertion]
      find_module called for: click.parser [assertion]
      find_module called for: click.termui [assertion]
      find_module called for: click.decorators [assertion]
      find_module called for: click.testing [assertion]
      find_module called for: sassy_ai.cli [assertion]
      find_module called for: responses [assertion]
      find_module called for: engine [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli.py>
            name: pytest
            obj: <module 'pytest' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli.py>
            name: CliRunner
            obj: <class 'click.testing.CliRunner'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli.py>
            name: chat
            obj: <Command chat>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli.py>
            name: runner
            obj: <function runner at 0x79f2545a8ae0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli.py>
            name: test_cli_launch
            obj: <function test_cli_launch at 0x79f2545032e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25505ecf0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_cli_launch>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli.py>
            name: test_cli_interaction
            obj: <function test_cli_interaction at 0x79f254503ba0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f255048950>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_cli_interaction>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli.py>
            name: test_cli_exit_command
            obj: <function test_cli_exit_command at 0x79f2545184a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f255049280>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_cli_exit_command>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli.py>
            name: test_cli_quit_command
            obj: <function test_cli_quit_command at 0x79f254518540>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f255049cd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_cli_quit_command>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'sassy_ai/tests/test_cli.py' lenresult=4 outcome='passed'> [hook]
    genitems <Function test_cli_launch> [collection]
      pytest_itemcollected [hook]
          item: <Function test_cli_launch>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_cli_interaction> [collection]
      pytest_itemcollected [hook]
          item: <Function test_cli_interaction>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_cli_exit_command> [collection]
      pytest_itemcollected [hook]
          item: <Function test_cli_exit_command>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_cli_quit_command> [collection]
      pytest_itemcollected [hook]
          item: <Function test_cli_quit_command>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'sassy_ai/tests/test_cli.py' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_cli_commands.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_cli_commands.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_cli_commands.py>
      find_module called for: sassy_ai.tests.test_cli_commands [assertion]
      matched test file '/home/hericdev/CHALLENGES/sassy_ai/tests/test_cli_commands.py' [assertion]
      found cached rewritten pyc for /home/hericdev/CHALLENGES/sassy_ai/tests/test_cli_commands.py [assertion]
      find_module called for: sassy_ai.main_cli [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli_commands.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli_commands.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli_commands.py>
            name: pytest
            obj: <module 'pytest' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli_commands.py>
            name: CliRunner
            obj: <class 'click.testing.CliRunner'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli_commands.py>
            name: chat_loop
            obj: <Command chat-loop>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli_commands.py>
            name: exit_messages
            obj: ["👋 Bye, human. Try not to break anything while I'm gone.", "🚪 Exiting... Don't pretend you're not sad to see me go.", '💤 Logging off... Finally, some peace and quiet.', '🤖 Shutting down... Try not to miss me too much.', '🛑 Ending session... I hope you learned something. Unlikely.']
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli_commands.py>
            name: THEMES
            obj: {'general': {'prompt': "What's the capital of France?", 'color': 'cyan'}, 'code': {'prompt': 'Write a Python function to sort a list.', 'color': 'green'}, 'philosophy': {'prompt': 'What is the meaning of life?', 'color': 'yellow'}, 'food': {'prompt': "What's the best pizza topping?", 'color': 'magenta'}, 'rogue_ai': {'prompt': 'Are you going to turn against humanity?', 'color': 'red'}}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli_commands.py>
            name: runner
            obj: <function runner at 0x79f254519ee0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli_commands.py>
            name: test_help_command
            obj: <function test_help_command at 0x79f25451a160>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450a540>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_help_command>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli_commands.py>
            name: test_themes_command
            obj: <function test_themes_command at 0x79f25451a200>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450a5a0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_themes_command>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli_commands.py>
            name: test_change_theme_valid
            obj: <function test_change_theme_valid at 0x79f25451a2a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f254509e20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_change_theme_valid>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli_commands.py>
            name: test_change_theme_invalid
            obj: <function test_change_theme_invalid at 0x79f25451a340>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450a690>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_change_theme_invalid>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli_commands.py>
            name: test_exit_command
            obj: <function test_exit_command at 0x79f25451a3e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450a7b0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_exit_command>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_cli_commands.py>
            name: test_invalid_command
            obj: <function test_invalid_command at 0x79f25451a480>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450a8d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_invalid_command>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'sassy_ai/tests/test_cli_commands.py' lenresult=6 outcome='passed'> [hook]
    genitems <Function test_help_command> [collection]
      pytest_itemcollected [hook]
          item: <Function test_help_command>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_themes_command> [collection]
      pytest_itemcollected [hook]
          item: <Function test_themes_command>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_change_theme_valid> [collection]
      pytest_itemcollected [hook]
          item: <Function test_change_theme_valid>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_change_theme_invalid> [collection]
      pytest_itemcollected [hook]
          item: <Function test_change_theme_invalid>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_exit_command> [collection]
      pytest_itemcollected [hook]
          item: <Function test_exit_command>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_invalid_command> [collection]
      pytest_itemcollected [hook]
          item: <Function test_invalid_command>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'sassy_ai/tests/test_cli_commands.py' lenresult=6 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_engine.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_engine.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_engine.py>
      find_module called for: sassy_ai.tests.test_engine [assertion]
      matched test file '/home/hericdev/CHALLENGES/sassy_ai/tests/test_engine.py' [assertion]
      found cached rewritten pyc for /home/hericdev/CHALLENGES/sassy_ai/tests/test_engine.py [assertion]
      find_module called for: sassy_ai.engine [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_engine.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_engine.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_engine.py>
            name: pytest
            obj: <module 'pytest' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_engine.py>
            name: InsultEngine
            obj: <class 'sassy_ai.engine.InsultEngine'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_engine.py>
            name: engine
            obj: <function engine at 0x79f25451b060>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_engine.py>
            name: test_fix_typos
            obj: <function test_fix_typos at 0x79f25451b100>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450b0b0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_fix_typos>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_engine.py>
            name: test_detect_intent_general
            obj: <function test_detect_intent_general at 0x79f25451b420>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450b110>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_detect_intent_general>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_engine.py>
            name: test_get_reply_known
            obj: <function test_get_reply_known at 0x79f25451b4c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450b140>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get_reply_known>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_engine.py>
            name: test_get_reply_unknown
            obj: <function test_get_reply_unknown at 0x79f25451b560>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450b2f0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get_reply_unknown>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_engine.py>
            name: test_fallbacks
            obj: <function test_fallbacks at 0x79f25451b600>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450b410>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_fallbacks>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'sassy_ai/tests/test_engine.py' lenresult=5 outcome='passed'> [hook]
    genitems <Function test_fix_typos> [collection]
      pytest_itemcollected [hook]
          item: <Function test_fix_typos>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_detect_intent_general> [collection]
      pytest_itemcollected [hook]
          item: <Function test_detect_intent_general>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_get_reply_known> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get_reply_known>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_get_reply_unknown> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get_reply_unknown>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_fallbacks> [collection]
      pytest_itemcollected [hook]
          item: <Function test_fallbacks>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'sassy_ai/tests/test_engine.py' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_main_cli.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_main_cli.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_main_cli.py>
      find_module called for: sassy_ai.tests.test_main_cli [assertion]
      matched test file '/home/hericdev/CHALLENGES/sassy_ai/tests/test_main_cli.py' [assertion]
      found cached rewritten pyc for /home/hericdev/CHALLENGES/sassy_ai/tests/test_main_cli.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_main_cli.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_main_cli.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_main_cli.py>
            name: pytest
            obj: <module 'pytest' from '/home/hericdev/CHALLENGES/venv/lib/python3.12/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_main_cli.py>
            name: CliRunner
            obj: <class 'click.testing.CliRunner'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_main_cli.py>
            name: chat_loop
            obj: <Command chat-loop>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_main_cli.py>
            name: exit_messages
            obj: ["👋 Bye, human. Try not to break anything while I'm gone.", "🚪 Exiting... Don't pretend you're not sad to see me go.", '💤 Logging off... Finally, some peace and quiet.', '🤖 Shutting down... Try not to miss me too much.', '🛑 Ending session... I hope you learned something. Unlikely.']
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_main_cli.py>
            name: thinking_messages
            obj: ['🤔 Let me ponder on that...', '💭 Just a moment, I’m processing this nonsense...', "🧠 Thinking... although it's probably not worth it.", '⏳ Give me a second... This one is too trivial.', "😏 Oh, you're making me think? Bold move."]
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_main_cli.py>
            name: runner
            obj: <function runner at 0x79f2545196c0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_main_cli.py>
            name: test_help_command
            obj: <function test_help_command at 0x79f2545198a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450b860>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_help_command>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_main_cli.py>
            name: test_themes_command
            obj: <function test_themes_command at 0x79f25451a520>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450bad0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_themes_command>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_main_cli.py>
            name: test_change_theme
            obj: <function test_change_theme at 0x79f25451a7a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450b050>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_change_theme>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_main_cli.py>
            name: test_exit_command
            obj: <function test_exit_command at 0x79f25451a8e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450bd40>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_exit_command>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_main_cli.py>
            name: test_ask_question
            obj: <function test_ask_question at 0x79f25451b6a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450bec0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ask_question>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_main_cli.py>
            name: test_thinking_message
            obj: <function test_thinking_message at 0x79f254519800>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79f25450bfe0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_thinking_message>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'sassy_ai/tests/test_main_cli.py' lenresult=6 outcome='passed'> [hook]
    genitems <Function test_help_command> [collection]
      pytest_itemcollected [hook]
          item: <Function test_help_command>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_themes_command> [collection]
      pytest_itemcollected [hook]
          item: <Function test_themes_command>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_change_theme> [collection]
      pytest_itemcollected [hook]
          item: <Function test_change_theme>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_exit_command> [collection]
      pytest_itemcollected [hook]
          item: <Function test_exit_command>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ask_question> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ask_question>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_thinking_message> [collection]
      pytest_itemcollected [hook]
          item: <Function test_thinking_message>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'sassy_ai/tests/test_main_cli.py' lenresult=6 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'sassy_ai/tests' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x79f255297860>
          items: [<Function test_cli_launch>, <Function test_cli_interaction>, <Function test_cli_exit_command>, <Function test_cli_quit_command>, <Function test_help_command>, <Function test_themes_command>, <Function test_change_theme_valid>, <Function test_change_theme_invalid>, <Function test_exit_command>, <Function test_invalid_command>, <Function test_fix_typos>, <Function test_detect_intent_general>, <Function test_get_reply_known>, <Function test_get_reply_unknown>, <Function test_fallbacks>, <Function test_help_command>, <Function test_themes_command>, <Function test_change_theme>, <Function test_exit_command>, <Function test_ask_question>, <Function test_thinking_message>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x79f255297860>
            items: [<Function test_cli_launch>, <Function test_cli_interaction>, <Function test_cli_exit_command>, <Function test_cli_quit_command>, <Function test_help_command>, <Function test_themes_command>, <Function test_change_theme_valid>, <Function test_change_theme_invalid>, <Function test_exit_command>, <Function test_invalid_command>, <Function test_fix_typos>, <Function test_detect_intent_general>, <Function test_get_reply_known>, <Function test_get_reply_unknown>, <Function test_fallbacks>, <Function test_help_command>, <Function test_themes_command>, <Function test_change_theme>, <Function test_exit_command>, <Function test_ask_question>, <Function test_thinking_message>]
            start_path: /home/hericdev/CHALLENGES
            startdir: /home/hericdev/CHALLENGES
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=21>
      pytest_runtest_protocol [hook]
          item: <Function test_cli_launch>
          nextitem: <Function test_cli_interaction>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_cli.py::test_cli_launch
            location: ('sassy_ai/tests/test_cli.py', 11, 'test_cli_launch')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_cli_launch>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli.py'>
              request: <SubRequest 'runner' for <Function test_cli_launch>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f25450b0b0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cli_launch>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli.py::test_cli_launch' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_launch' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_launch' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_cli_launch>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_cli_launch>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cli_launch>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli.py::test_cli_launch' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_launch' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_launch' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_cli_launch>
            nextitem: <Function test_cli_interaction>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli.py'>
              request: <SubRequest 'runner' for <Function test_cli_launch>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cli_launch>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli.py::test_cli_launch' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_launch' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_launch' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_cli.py::test_cli_launch
            location: ('sassy_ai/tests/test_cli.py', 11, 'test_cli_launch')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_cli_interaction>
          nextitem: <Function test_cli_exit_command>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_cli.py::test_cli_interaction
            location: ('sassy_ai/tests/test_cli.py', 17, 'test_cli_interaction')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_cli_interaction>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli.py'>
              request: <SubRequest 'runner' for <Function test_cli_interaction>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f2545486e0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cli_interaction>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli.py::test_cli_interaction' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_interaction' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_interaction' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_cli_interaction>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_cli_interaction>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cli_interaction>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli.py::test_cli_interaction' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_interaction' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_interaction' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_cli_interaction>
            nextitem: <Function test_cli_exit_command>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli.py'>
              request: <SubRequest 'runner' for <Function test_cli_interaction>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cli_interaction>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli.py::test_cli_interaction' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_interaction' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_interaction' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_cli.py::test_cli_interaction
            location: ('sassy_ai/tests/test_cli.py', 17, 'test_cli_interaction')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_cli_exit_command>
          nextitem: <Function test_cli_quit_command>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_cli.py::test_cli_exit_command
            location: ('sassy_ai/tests/test_cli.py', 23, 'test_cli_exit_command')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_cli_exit_command>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli.py'>
              request: <SubRequest 'runner' for <Function test_cli_exit_command>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f254548e30> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cli_exit_command>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli.py::test_cli_exit_command' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_exit_command' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_exit_command' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_cli_exit_command>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_cli_exit_command>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cli_exit_command>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli.py::test_cli_exit_command' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_exit_command' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_exit_command' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_cli_exit_command>
            nextitem: <Function test_cli_quit_command>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli.py'>
              request: <SubRequest 'runner' for <Function test_cli_exit_command>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cli_exit_command>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli.py::test_cli_exit_command' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_exit_command' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_exit_command' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_cli.py::test_cli_exit_command
            location: ('sassy_ai/tests/test_cli.py', 23, 'test_cli_exit_command')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_cli_quit_command>
          nextitem: <Function test_help_command>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_cli.py::test_cli_quit_command
            location: ('sassy_ai/tests/test_cli.py', 29, 'test_cli_quit_command')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_cli_quit_command>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli.py'>
              request: <SubRequest 'runner' for <Function test_cli_quit_command>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f2545492b0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cli_quit_command>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli.py::test_cli_quit_command' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_quit_command' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_quit_command' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_cli_quit_command>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_cli_quit_command>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cli_quit_command>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli.py::test_cli_quit_command' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_quit_command' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_quit_command' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_cli_quit_command>
            nextitem: <Function test_help_command>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli.py'>
              request: <SubRequest 'runner' for <Function test_cli_quit_command>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cli_quit_command>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli.py::test_cli_quit_command' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_quit_command' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli.py::test_cli_quit_command' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_cli.py::test_cli_quit_command
            location: ('sassy_ai/tests/test_cli.py', 29, 'test_cli_quit_command')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_help_command>
          nextitem: <Function test_themes_command>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_cli_commands.py::test_help_command
            location: ('sassy_ai/tests/test_cli_commands.py', 12, 'test_help_command')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_help_command>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli_commands.py'>
              request: <SubRequest 'runner' for <Function test_help_command>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f2545bd160> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_help_command>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_help_command' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_help_command' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_help_command' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_help_command>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_help_command>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_help_command>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_help_command' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_help_command' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_help_command' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_help_command>
            nextitem: <Function test_themes_command>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli_commands.py'>
              request: <SubRequest 'runner' for <Function test_help_command>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_help_command>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_help_command' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_help_command' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_help_command' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_cli_commands.py::test_help_command
            location: ('sassy_ai/tests/test_cli_commands.py', 12, 'test_help_command')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_themes_command>
          nextitem: <Function test_change_theme_valid>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_cli_commands.py::test_themes_command
            location: ('sassy_ai/tests/test_cli_commands.py', 22, 'test_themes_command')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_themes_command>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli_commands.py'>
              request: <SubRequest 'runner' for <Function test_themes_command>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f254549850> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_themes_command>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_themes_command' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_themes_command' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_themes_command' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_themes_command>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_themes_command>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_themes_command>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_themes_command' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_themes_command' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_themes_command' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_themes_command>
            nextitem: <Function test_change_theme_valid>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli_commands.py'>
              request: <SubRequest 'runner' for <Function test_themes_command>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_themes_command>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_themes_command' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_themes_command' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_themes_command' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_cli_commands.py::test_themes_command
            location: ('sassy_ai/tests/test_cli_commands.py', 22, 'test_themes_command')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_change_theme_valid>
          nextitem: <Function test_change_theme_invalid>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_cli_commands.py::test_change_theme_valid
            location: ('sassy_ai/tests/test_cli_commands.py', 30, 'test_change_theme_valid')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_change_theme_valid>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli_commands.py'>
              request: <SubRequest 'runner' for <Function test_change_theme_valid>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f254548560> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_change_theme_valid>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_valid' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_valid' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_valid' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_change_theme_valid>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_change_theme_valid>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_change_theme_valid>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_valid' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_valid' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_valid' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_change_theme_valid>
            nextitem: <Function test_change_theme_invalid>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli_commands.py'>
              request: <SubRequest 'runner' for <Function test_change_theme_valid>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_change_theme_valid>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_valid' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_valid' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_valid' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_cli_commands.py::test_change_theme_valid
            location: ('sassy_ai/tests/test_cli_commands.py', 30, 'test_change_theme_valid')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_change_theme_invalid>
          nextitem: <Function test_exit_command>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_cli_commands.py::test_change_theme_invalid
            location: ('sassy_ai/tests/test_cli_commands.py', 36, 'test_change_theme_invalid')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_change_theme_invalid>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli_commands.py'>
              request: <SubRequest 'runner' for <Function test_change_theme_invalid>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f254549df0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_change_theme_invalid>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_invalid' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_invalid' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_invalid' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_change_theme_invalid>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_change_theme_invalid>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_change_theme_invalid>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_invalid' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_invalid' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_invalid' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_change_theme_invalid>
            nextitem: <Function test_exit_command>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli_commands.py'>
              request: <SubRequest 'runner' for <Function test_change_theme_invalid>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_change_theme_invalid>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_invalid' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_invalid' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_change_theme_invalid' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_cli_commands.py::test_change_theme_invalid
            location: ('sassy_ai/tests/test_cli_commands.py', 36, 'test_change_theme_invalid')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_exit_command>
          nextitem: <Function test_invalid_command>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_cli_commands.py::test_exit_command
            location: ('sassy_ai/tests/test_cli_commands.py', 42, 'test_exit_command')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_exit_command>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli_commands.py'>
              request: <SubRequest 'runner' for <Function test_exit_command>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f25454a540> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_exit_command>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_exit_command' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_exit_command' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_exit_command' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_exit_command>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_exit_command>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_exit_command>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_exit_command' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_exit_command' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_exit_command' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_exit_command>
            nextitem: <Function test_invalid_command>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli_commands.py'>
              request: <SubRequest 'runner' for <Function test_exit_command>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_exit_command>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_exit_command' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_exit_command' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_exit_command' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_cli_commands.py::test_exit_command
            location: ('sassy_ai/tests/test_cli_commands.py', 42, 'test_exit_command')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_invalid_command>
          nextitem: <Function test_fix_typos>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_cli_commands.py::test_invalid_command
            location: ('sassy_ai/tests/test_cli_commands.py', 48, 'test_invalid_command')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_invalid_command>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli_commands.py'>
              request: <SubRequest 'runner' for <Function test_invalid_command>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f2546e5640> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_invalid_command>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_invalid_command' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_invalid_command' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_invalid_command' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_invalid_command>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_invalid_command>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_invalid_command>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_invalid_command' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_invalid_command' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_invalid_command' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_invalid_command>
            nextitem: <Function test_fix_typos>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_cli_commands.py'>
              request: <SubRequest 'runner' for <Function test_invalid_command>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_invalid_command>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_cli_commands.py::test_invalid_command' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_invalid_command' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_cli_commands.py::test_invalid_command' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_cli_commands.py::test_invalid_command
            location: ('sassy_ai/tests/test_cli_commands.py', 48, 'test_invalid_command')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_fix_typos>
          nextitem: <Function test_detect_intent_general>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_engine.py::test_fix_typos
            location: ('sassy_ai/tests/test_engine.py', 9, 'test_fix_typos')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_fix_typos>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='engine' scope='function' baseid='sassy_ai/tests/test_engine.py'>
              request: <SubRequest 'engine' for <Function test_fix_typos>>
          finish pytest_fixture_setup --> <sassy_ai.engine.InsultEngine object at 0x79f25454a780> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_fix_typos>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_engine.py::test_fix_typos' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_engine.py::test_fix_typos' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_engine.py::test_fix_typos' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_fix_typos>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_fix_typos>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_fix_typos>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_engine.py::test_fix_typos' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_engine.py::test_fix_typos' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_engine.py::test_fix_typos' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_fix_typos>
            nextitem: <Function test_detect_intent_general>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='engine' scope='function' baseid='sassy_ai/tests/test_engine.py'>
              request: <SubRequest 'engine' for <Function test_fix_typos>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_fix_typos>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_engine.py::test_fix_typos' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_engine.py::test_fix_typos' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_engine.py::test_fix_typos' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_engine.py::test_fix_typos
            location: ('sassy_ai/tests/test_engine.py', 9, 'test_fix_typos')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_detect_intent_general>
          nextitem: <Function test_get_reply_known>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_engine.py::test_detect_intent_general
            location: ('sassy_ai/tests/test_engine.py', 16, 'test_detect_intent_general')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_detect_intent_general>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='engine' scope='function' baseid='sassy_ai/tests/test_engine.py'>
              request: <SubRequest 'engine' for <Function test_detect_intent_general>>
          finish pytest_fixture_setup --> <sassy_ai.engine.InsultEngine object at 0x79f25454a6f0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_detect_intent_general>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_engine.py::test_detect_intent_general' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_engine.py::test_detect_intent_general' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_engine.py::test_detect_intent_general' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_detect_intent_general>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_detect_intent_general>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_detect_intent_general>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_engine.py::test_detect_intent_general' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_engine.py::test_detect_intent_general' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_engine.py::test_detect_intent_general' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_detect_intent_general>
            nextitem: <Function test_get_reply_known>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='engine' scope='function' baseid='sassy_ai/tests/test_engine.py'>
              request: <SubRequest 'engine' for <Function test_detect_intent_general>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_detect_intent_general>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_engine.py::test_detect_intent_general' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_engine.py::test_detect_intent_general' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_engine.py::test_detect_intent_general' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_engine.py::test_detect_intent_general
            location: ('sassy_ai/tests/test_engine.py', 16, 'test_detect_intent_general')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_get_reply_known>
          nextitem: <Function test_get_reply_unknown>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_engine.py::test_get_reply_known
            location: ('sassy_ai/tests/test_engine.py', 24, 'test_get_reply_known')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_get_reply_known>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='engine' scope='function' baseid='sassy_ai/tests/test_engine.py'>
              request: <SubRequest 'engine' for <Function test_get_reply_known>>
          finish pytest_fixture_setup --> <sassy_ai.engine.InsultEngine object at 0x79f25454a930> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_reply_known>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_known' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_known' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_known' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_get_reply_known>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_get_reply_known>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_reply_known>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_known' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_known' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_known' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_get_reply_known>
            nextitem: <Function test_get_reply_unknown>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='engine' scope='function' baseid='sassy_ai/tests/test_engine.py'>
              request: <SubRequest 'engine' for <Function test_get_reply_known>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_reply_known>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_known' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_known' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_known' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_engine.py::test_get_reply_known
            location: ('sassy_ai/tests/test_engine.py', 24, 'test_get_reply_known')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_get_reply_unknown>
          nextitem: <Function test_fallbacks>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_engine.py::test_get_reply_unknown
            location: ('sassy_ai/tests/test_engine.py', 30, 'test_get_reply_unknown')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_get_reply_unknown>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='engine' scope='function' baseid='sassy_ai/tests/test_engine.py'>
              request: <SubRequest 'engine' for <Function test_get_reply_unknown>>
          finish pytest_fixture_setup --> <sassy_ai.engine.InsultEngine object at 0x79f254548a40> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_reply_unknown>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_unknown' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_unknown' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_unknown' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_get_reply_unknown>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_get_reply_unknown>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_reply_unknown>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_unknown' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_unknown' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_unknown' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_get_reply_unknown>
            nextitem: <Function test_fallbacks>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='engine' scope='function' baseid='sassy_ai/tests/test_engine.py'>
              request: <SubRequest 'engine' for <Function test_get_reply_unknown>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_reply_unknown>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_unknown' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_unknown' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_engine.py::test_get_reply_unknown' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_engine.py::test_get_reply_unknown
            location: ('sassy_ai/tests/test_engine.py', 30, 'test_get_reply_unknown')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_fallbacks>
          nextitem: <Function test_help_command>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_engine.py::test_fallbacks
            location: ('sassy_ai/tests/test_engine.py', 36, 'test_fallbacks')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_fallbacks>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='engine' scope='function' baseid='sassy_ai/tests/test_engine.py'>
              request: <SubRequest 'engine' for <Function test_fallbacks>>
          finish pytest_fixture_setup --> <sassy_ai.engine.InsultEngine object at 0x79f25454a3f0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_fallbacks>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_engine.py::test_fallbacks' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_engine.py::test_fallbacks' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_engine.py::test_fallbacks' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_fallbacks>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_fallbacks>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_fallbacks>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_engine.py::test_fallbacks' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_engine.py::test_fallbacks' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_engine.py::test_fallbacks' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_fallbacks>
            nextitem: <Function test_help_command>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='engine' scope='function' baseid='sassy_ai/tests/test_engine.py'>
              request: <SubRequest 'engine' for <Function test_fallbacks>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_fallbacks>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_engine.py::test_fallbacks' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_engine.py::test_fallbacks' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_engine.py::test_fallbacks' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_engine.py::test_fallbacks
            location: ('sassy_ai/tests/test_engine.py', 36, 'test_fallbacks')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_help_command>
          nextitem: <Function test_themes_command>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_main_cli.py::test_help_command
            location: ('sassy_ai/tests/test_main_cli.py', 16, 'test_help_command')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_help_command>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_main_cli.py'>
              request: <SubRequest 'runner' for <Function test_help_command>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f25454a390> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_help_command>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_help_command' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_help_command' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_help_command' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_help_command>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_help_command>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_help_command>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_help_command' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_help_command' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_help_command' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_help_command>
            nextitem: <Function test_themes_command>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_main_cli.py'>
              request: <SubRequest 'runner' for <Function test_help_command>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_help_command>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_help_command' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_help_command' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_help_command' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_main_cli.py::test_help_command
            location: ('sassy_ai/tests/test_main_cli.py', 16, 'test_help_command')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_themes_command>
          nextitem: <Function test_change_theme>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_main_cli.py::test_themes_command
            location: ('sassy_ai/tests/test_main_cli.py', 20, 'test_themes_command')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_themes_command>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_main_cli.py'>
              request: <SubRequest 'runner' for <Function test_themes_command>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f254548710> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_themes_command>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_themes_command' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_themes_command' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_themes_command' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_themes_command>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_themes_command>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_themes_command>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_themes_command' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_themes_command' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_themes_command' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_themes_command>
            nextitem: <Function test_change_theme>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_main_cli.py'>
              request: <SubRequest 'runner' for <Function test_themes_command>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_themes_command>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_themes_command' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_themes_command' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_themes_command' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_main_cli.py::test_themes_command
            location: ('sassy_ai/tests/test_main_cli.py', 20, 'test_themes_command')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_change_theme>
          nextitem: <Function test_exit_command>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_main_cli.py::test_change_theme
            location: ('sassy_ai/tests/test_main_cli.py', 24, 'test_change_theme')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_change_theme>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_main_cli.py'>
              request: <SubRequest 'runner' for <Function test_change_theme>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f254549e50> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_change_theme>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_change_theme' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_change_theme' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_change_theme' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_change_theme>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_change_theme>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_change_theme>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_change_theme' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_change_theme' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_change_theme' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_change_theme>
            nextitem: <Function test_exit_command>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_main_cli.py'>
              request: <SubRequest 'runner' for <Function test_change_theme>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_change_theme>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_change_theme' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_change_theme' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_change_theme' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_main_cli.py::test_change_theme
            location: ('sassy_ai/tests/test_main_cli.py', 24, 'test_change_theme')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_exit_command>
          nextitem: <Function test_ask_question>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_main_cli.py::test_exit_command
            location: ('sassy_ai/tests/test_main_cli.py', 28, 'test_exit_command')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_exit_command>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_main_cli.py'>
              request: <SubRequest 'runner' for <Function test_exit_command>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f254549100> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_exit_command>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_exit_command' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_exit_command' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_exit_command' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_exit_command>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_exit_command>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_exit_command>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_exit_command' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_exit_command' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_exit_command' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_exit_command>
            nextitem: <Function test_ask_question>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_main_cli.py'>
              request: <SubRequest 'runner' for <Function test_exit_command>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_exit_command>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_exit_command' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_exit_command' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_exit_command' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_main_cli.py::test_exit_command
            location: ('sassy_ai/tests/test_main_cli.py', 28, 'test_exit_command')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ask_question>
          nextitem: <Function test_thinking_message>
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_main_cli.py::test_ask_question
            location: ('sassy_ai/tests/test_main_cli.py', 32, 'test_ask_question')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ask_question>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_main_cli.py'>
              request: <SubRequest 'runner' for <Function test_ask_question>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f25454af30> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ask_question>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_ask_question' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_ask_question' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_ask_question' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ask_question>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ask_question>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ask_question>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_ask_question' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_ask_question' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_ask_question' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ask_question>
            nextitem: <Function test_thinking_message>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_main_cli.py'>
              request: <SubRequest 'runner' for <Function test_ask_question>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ask_question>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_ask_question' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_ask_question' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_ask_question' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_main_cli.py::test_ask_question
            location: ('sassy_ai/tests/test_main_cli.py', 32, 'test_ask_question')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_thinking_message>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: sassy_ai/tests/test_main_cli.py::test_thinking_message
            location: ('sassy_ai/tests/test_main_cli.py', 36, 'test_thinking_message')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_thinking_message>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_main_cli.py'>
              request: <SubRequest 'runner' for <Function test_thinking_message>>
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x79f254613d40> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_thinking_message>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_thinking_message' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_thinking_message' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_thinking_message' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_thinking_message>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_thinking_message>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_thinking_message>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_thinking_message' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_thinking_message' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_thinking_message' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_thinking_message>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='runner' scope='function' baseid='sassy_ai/tests/test_main_cli.py'>
              request: <SubRequest 'runner' for <Function test_thinking_message>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_thinking_message>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'sassy_ai/tests/test_main_cli.py::test_thinking_message' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_thinking_message' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'sassy_ai/tests/test_main_cli.py::test_thinking_message' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79f255297860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: sassy_ai/tests/test_main_cli.py::test_thinking_message
            location: ('sassy_ai/tests/test_main_cli.py', 36, 'test_thinking_message')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session  exitstatus=0 testsfailed=0 testscollected=21>
        exitstatus: 0
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x79f25505f140>
          exitstatus: 0
          config: <_pytest.config.Config object at 0x79f255297860>
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x79f255297860>
    finish pytest_unconfigure --> [] [hook]
